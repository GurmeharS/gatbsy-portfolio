{"version":3,"sources":["webpack:///./src/pages/page-2.tsx","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["SecondPage","props","title","path","to","Layout","children","data","siteTitle","site","siteMetadata","style","margin","maxWidth","padding","Date","getFullYear","href","SEO","description","lang","meta","metaDescription","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"6FAAA,oEAgBeA,UATI,SAACC,GAAD,OACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,aACX,uDACA,iDAAuBD,EAAME,KAA7B,KACA,kBAAC,OAAD,CAAMC,GAAG,KAAT,8B,sHCsCWC,IApCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAUV,OACE,oCACE,kBAAC,IAAD,CAAQC,UAAWD,EAAKE,KAAKC,aAAaR,QAC1C,yBACES,MAAO,CACLC,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOR,GACP,sCACK,IAAIS,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,e,yVC3BV,SAASC,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMnB,EAAS,EAATA,MAC9BO,EADuC,OACvCA,KAcFa,EAAkBH,GAAeV,EAAKC,aAAaS,YAEzD,OACE,kBAAC,IAAD,CACEI,eAAgB,CACdH,QAEFlB,MAAOA,EACPsB,cAAa,QAAUf,EAAKC,aAAaR,MACzCmB,KAAM,CACJ,CACEI,KAAK,cACLC,QAASJ,GAEX,CACEK,SAAS,WACTD,QAASxB,GAEX,CACEyB,SAAS,iBACTD,QAASJ,GAEX,CACEK,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASjB,EAAKC,aAAakB,QAE7B,CACEH,KAAK,gBACLC,QAASxB,GAEX,CACEuB,KAAK,sBACLC,QAASJ,IAEXO,OAAOR,KAKfH,EAAIY,aAAe,CACjBV,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-pages-page-2-tsx-933d1543f398586b2852.js","sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst SecondPage = (props: PageProps) => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2 ({props.path})</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}